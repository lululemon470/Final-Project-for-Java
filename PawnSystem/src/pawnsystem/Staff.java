/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pawnsystem;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Image;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.sql.*;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/**
 *
 * @author macbookpro14
 */
public class Staff extends javax.swing.JFrame {
    private DefaultTableModel model;
    private Connection conn;
    /**
     * Creates new form Staff
     */
    public Staff() {
        initComponents();
        btnadd.setIcon(new FlatSVGIcon("images/add.svg",0.35f));
        btnupdate.setIcon(new FlatSVGIcon("images/edit.svg",0.35f));
        btndelete.setIcon(new FlatSVGIcon("images/delete.svg",0.35f));
       
        txtsearch.putClientProperty(FlatClientProperties.TEXT_FIELD_TRAILING_ICON, new FlatSVGIcon("images/search.svg",0.35f));
        txtsearch.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Search");
        JScrollPane scroll = (JScrollPane) tblStaff.getParent().getParent();
        scroll.setBorder(BorderFactory.createEmptyBorder());
        txtname.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Enter name");
        txtusername.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Enter username");
        txtpass.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Enter password");
        tblStaff.getTableHeader().putClientProperty(FlatClientProperties.STYLE_CLASS, "table_style");
        tblStaff.putClientProperty(FlatClientProperties.STYLE_CLASS, "table_style");
        
        // Use the existing table and model
        model = (DefaultTableModel) tblStaff.getModel(); // Already existing model
        
        
        // Connect to the database
        connectDatabase();
        
        getData();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelTotalStaff = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStaff = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtusername = new javax.swing.JTextField();
        cborole = new javax.swing.JComboBox<>();
        txtid = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        txtpass = new javax.swing.JTextField();
        btnclear = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(830, 720));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelTotalStaff.setFont(new java.awt.Font("Baloo Bhai 2", 1, 36)); // NOI18N
        labelTotalStaff.setForeground(new java.awt.Color(75, 84, 92));
        labelTotalStaff.setText("0");
        jPanel1.add(labelTotalStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 210, 50));

        txtsearch.setPreferredSize(new java.awt.Dimension(200, 23));
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        jPanel1.add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 259, 253, 35));

        tblStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Staff ID", "Staff Name", "Username", "Password", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblStaffMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblStaff);
        if (tblStaff.getColumnModel().getColumnCount() > 0) {
            tblStaff.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 306, 789, 380));

        jSeparator1.setBackground(new java.awt.Color(75, 84, 92));
        jSeparator1.setForeground(new java.awt.Color(75, 84, 92));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 789, 10));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel2.setText("Staff ID:");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel3.setText("Name:");

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel4.setText("Role: ");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel5.setText("Username:");

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel6.setText("Password:");

        cborole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "~ Select Option ~", "Admin", "Manager", "Clerk" }));
        cborole.setPreferredSize(new java.awt.Dimension(72, 30));

        txtid.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        txtid.setForeground(new java.awt.Color(255, 51, 102));
        txtid.setEnabled(false);

        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cborole, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(23, 23, 23)
                                .addComponent(txtpass, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnupdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btndelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(71, 71, 71))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(11, Short.MAX_VALUE)
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtusername, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 21, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cborole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtpass, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 73, 789, 160));

        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        jPanel1.add(btnclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 105, 35));

        jLabel7.setFont(new java.awt.Font("Baloo Bhai 2", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(75, 84, 92));
        jLabel7.setText("Staff :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 100, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblStaffMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStaffMousePressed
        // TODO add your handling code here:
        int selectedRowIndex = tblStaff.getSelectedRow();

        // If no row is selected, selectedRowIndex will be -1
        if (selectedRowIndex != -1) {
            // Get the table model
            TableModel model = tblStaff.getModel();

            // Retrieve the values safely with proper casting
            Object idObj = model.getValueAt(selectedRowIndex, 0);   // Assuming 1st column is ID
            Object nameObj = model.getValueAt(selectedRowIndex, 1); // Assuming 2nd column is Name
            Object usernameObj = model.getValueAt(selectedRowIndex, 2); // Assuming 3rd column is Username
            Object passwordObj = model.getValueAt(selectedRowIndex, 3); // Assuming 4th column is Password
            Object roleObj = model.getValueAt(selectedRowIndex, 4);     // Assuming 5th column is Role

            // Convert ID to string if it's an Integer or handle accordingly
            String id = idObj != null ? idObj.toString() : "";  // Handle possible Integer
            String name = nameObj instanceof String ? (String) nameObj : "";
            String username = usernameObj instanceof String ? (String) usernameObj : "";
            String password = passwordObj instanceof String ? (String) passwordObj : "";
            String role = roleObj instanceof String ? (String) roleObj : "";

            // Set the values to the respective text fields and combo box
            txtid.setText(id);
            txtname.setText(name);
            txtusername.setText(username);
            txtpass.setText(password);
            cborole.setSelectedItem(role);

            // Print the selected row data for debugging (optional)
            System.out.println("Selected Row: ID=" + id + ", Name=" + name + ", Username=" + username + ", Role=" + role);

        } else {
            System.out.println("No row selected.");
        }


    }//GEN-LAST:event_tblStaffMousePressed
    
    
    private void getData(){
        model = (DefaultTableModel) tblStaff.getModel();
        model.setRowCount(0);
        labelTotalStaff.setText("");
        try {
            Connection con = Connector.getConnection();
            Statement st = con.createStatement();
            String query = "Select * from Staff";
            ResultSet rs = st.executeQuery(query);

            while(rs.next()){
                String id = String.valueOf(rs.getInt("staff_id"));
                String name = rs.getString("name");
                String username = rs.getString("username");
                String password = rs.getString("password");
                String role = rs.getString("role");
                Object data[] = {id,name,username,password,role};
                
                DefaultTableModel tblmodel = (DefaultTableModel) tblStaff.getModel();
                
                JTable table = new JTable(tblmodel);

                tblmodel.addRow(data);
            }
            
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            Connection con = Connector.getConnection();
            Statement st = con.createStatement();
            String query = "Select count(*) as totalStaff from Staff";
            ResultSet rs = st.executeQuery(query);

            if(rs.next()){
                String totalStaff = String.valueOf(rs.getInt("totalStaff"));
                
                labelTotalStaff.setText(totalStaff);
            }
            
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
        model = (DefaultTableModel) tblStaff.getModel();
        String searchText = txtsearch.getText().trim();
        model.setRowCount(0);
        String query = "SELECT * FROM Staff WHERE name LIKE ? or role LIKE ?";
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, searchText + "%");
            stmt.setString(2,searchText + "%");
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                int id = rs.getInt("staff_id");
                String name = rs.getString("name");
                String username = rs.getString("username");
                String password = rs.getString("password");
                String role = rs.getString("role");
           
                // Add row to table model
                model.addRow(new Object[]{id, name, username, password,role});
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_txtsearchKeyReleased

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        String roleCheck = String.valueOf(cborole.getSelectedItem());
        
        if(!txtname.getText().equalsIgnoreCase("") && !txtusername.getText().equalsIgnoreCase("")
                && !txtpass.getText().equalsIgnoreCase("") && roleCheck.equalsIgnoreCase("~ Select Option ~")
        ){
            String name= txtname.getText();
            String username = txtusername.getText();
            String password = txtpass.getText();
            String role = String.valueOf(cborole.getSelectedItem());

            String sql = "INSERT INTO Staff (name, username, password, role) "
            + "VALUES (?, ?, ?, ?)";
            try (Connection conn = Connector.getConnection()){
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setString(1, name);
                ps.setString(2, username);
                ps.setString(3, password);
                ps.setString(4,role);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Record Added Successfully.");
                resetField();
                getData();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }else{
          JOptionPane.showMessageDialog(null, "Fill in the text field","Failure", JOptionPane.ERROR_MESSAGE);
//          
//          Notifications.getInstance().show(Notifications.Type.ERROR,(("Fill in the text field")));
        }
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        if(!txtid.getText().equalsIgnoreCase("")){
            int sid = Integer.valueOf(txtid.getText());
            String name = txtname.getText();
            String username = txtusername.getText();
            String password = txtpass.getText();
            String role = String.valueOf(cborole.getSelectedItem());
            try(Connection con = Connector.getConnection()){
                PreparedStatement st = con.prepareStatement("UPDATE Staff SET name = ?, username = ?, password = ?, role = ? WHERE staff_id = ?");
                st.setString(1, name);
                st.setString(2, username);
                st.setString(3, password);
                st.setString(4, role);
                st.setInt(5, sid);
                st.executeUpdate();
                JOptionPane.showMessageDialog(null, "Record Updated Successfully.");
                resetField();
                getData();
            }catch(SQLException e){
                e.printStackTrace();
            };
        }else{
          JOptionPane.showMessageDialog(null, "Select a record to update","Failure",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        if(!txtid.getText().equalsIgnoreCase("")){
            int id = Integer.valueOf(txtid.getText());
            String query= "DELETE FROM Staff WHERE staff_id = ? ";
            try (Connection con = Connector.getConnection()){
                int choice = JOptionPane.showConfirmDialog(null, "Are u sure u want to delete this record?",
                    "Confirmation", JOptionPane.YES_NO_OPTION);
                if (choice == JOptionPane.YES_OPTION) {
                    // If the user chose 'Yes', show a message indicating that changes are saved
                    PreparedStatement preparedStatement = con.prepareStatement(query);
                    preparedStatement.setInt(1,id);
                    preparedStatement.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Record Deleted Successfully.");
                    resetField();
                    getData();
                }

            } catch (SQLException e) {
                e.printStackTrace();
            }
        }else{
              JOptionPane.showMessageDialog(null, "Select a record to delete","Failure",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        resetField();
    }//GEN-LAST:event_btnclearActionPerformed
    
    
    private void resetField(){
        txtid.setText("");
        txtname.setText("");
        txtpass.setText("");
        txtusername.setText("");
        cborole.setSelectedIndex(0);
    }
    
    private void connectDatabase() {
        try {
            // Adjust with your database details
            String url = "jdbc:mysql://localhost:3308/pawnshop_db";
            String user = "root";
            String password = "";
            conn = DriverManager.getConnection(url, user, password);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
        
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
          /* Create and display the form */
        try{
            FlatLaf.registerCustomDefaultsSource("images");
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
        }catch(Exception e){
            e.printStackTrace();
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Staff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cborole;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelTotalStaff;
    private javax.swing.JTable tblStaff;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtpass;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables
}
