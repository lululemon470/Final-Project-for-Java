/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pawnsystem;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.Color;
import java.sql.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author macbookpro14
 */
public class Redeem extends javax.swing.JFrame {
    private DefaultTableModel model;
    private Connection conn;
    String tempPawnid, tempCustomer, tempTelephone;
    String tempstart,tempdue,startDate,tempItem;
    /**
     * Creates new form Redeem
     */
    public Redeem() {
        initComponents();
        txtpawn.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Search by name or phone");
        txtpaid.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Enter the amount");
        txtpawn.putClientProperty(FlatClientProperties.TEXT_FIELD_TRAILING_ICON, new FlatSVGIcon("images/search.svg",0.35f));
        txtloan.setForeground(Color.red);
        connectDatabase();
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtpawn = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        txtloan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtinterest = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txttotaldebt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtpaid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnpaid1 = new javax.swing.JButton();
        txtunpaiddebt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtitem = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRedeem = new javax.swing.JTable();
        btnclear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Baloo Bhai 2", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(75, 84, 92));
        jLabel1.setText("Redeem");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 14, 159, 50));

        txtpawn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpawnKeyReleased(evt);
            }
        });
        jPanel1.add(txtpawn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 305, 240, 35));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtloan.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel3.setText("Loan Amount:");

        txtinterest.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel4.setText("Interest Rate:");

        txttotaldebt.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel5.setText("Unpaid Debt:");

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel6.setText("Paid Amount:");

        btnpaid1.setText("Pay");
        btnpaid1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpaid1ActionPerformed(evt);
            }
        });

        txtunpaiddebt.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel7.setText("Total Amount:");

        txtitem.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        jLabel8.setText("item:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(txtloan, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtpaid, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtunpaiddebt, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txttotaldebt, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtinterest, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtitem, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(btnpaid1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtloan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtinterest, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel5)
                        .addComponent(txtunpaiddebt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txttotaldebt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtitem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtpaid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnpaid1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 720, 220));

        tblRedeem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pawn ID", "Customer Name", "Phone", "Item", "Loan Start", "Loan Due", "Debt Amount", "Count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRedeem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblRedeemMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblRedeem);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, 720, 340));

        btnclear.setText("Clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        jPanel1.add(btnclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 310, 110, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void connectDatabase() {
        try {
            // Adjust with your database details
            String url = "jdbc:mysql://localhost:3308/pawnshop_db";
            String user = "root";
            String password = "";
            conn = DriverManager.getConnection(url, user, password);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    private void getData(){
        model = (DefaultTableModel) tblRedeem.getModel();
        model.setRowCount(0);
        try {
            Connection con = Connector.getConnection();
            Statement st = con.createStatement();
            String query = "Select * from Pawn, Item where Pawn.item_id = Item.item_id and debt_amount > 0";
            ResultSet rs = st.executeQuery(query);

            while(rs.next()){
                String id = rs.getString("pawn_id");
                String customerName = rs.getString("customer_name");
                String telephone = rs.getString("telephone");
                String item = rs.getString("item_name");
                String startDate = rs.getString("loan_start");
                String dueDate = rs.getString("loan_due");
                String debtAmount = String.valueOf(rs.getDouble("debt_amount"));
                String paidCount = String.valueOf(rs.getInt("paid_count"));
                
                Object data[] = {id,customerName,telephone,item,startDate,dueDate,debtAmount,paidCount};
                
                DefaultTableModel tblmodel = (DefaultTableModel) tblRedeem.getModel();
                
                JTable table = new JTable(tblmodel);
                
                tblmodel.addRow(data);
                
                
            }
            
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Staff.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
   
    public void clearData(){
        txtloan.setText("");
        txtinterest.setText("");
        txttotaldebt.setText("");
        txtunpaiddebt.setText("");
        txtpaid.setText("");
        txtitem.setText("");
        getData();
    }
    
    private void txtpawnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpawnKeyReleased
        model = (DefaultTableModel) tblRedeem.getModel();
        String searchText = txtpawn.getText().trim();
        model.setRowCount(0);
        String query = "SELECT * FROM Pawn INNER JOIN Item on Pawn.item_id = Item.item_id\n" +
        "where customer_name like ? or telephone like ?";
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, searchText + "%");
            stmt.setString(2,searchText + "%");
            ResultSet rs = stmt.executeQuery();

            while (rs.next()) {
                String id = rs.getString("pawn_id");
                String customerName = rs.getString("customer_name");
                String telephone = rs.getString("telephone");
                String item = rs.getString("item_name");
                String startDate = rs.getString("loan_start");
                String dueDate = rs.getString("loan_due");
                String debtAmount = String.valueOf(rs.getDouble("debt_amount"));
                String paidCount = String.valueOf(rs.getInt("paid_count"));

                model.addRow(new Object[]{id,customerName,telephone,item,startDate,dueDate,debtAmount,paidCount});
                // Add row to table model

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtpawnKeyReleased

    private void btnpaid1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpaid1ActionPerformed
        // TODO add your handling code here:
        if(!txtpaid.getText().equalsIgnoreCase("")){
            double paidAmount = Double.valueOf(txtpaid.getText());
            double totalAmount = Double.valueOf(txtunpaiddebt.getText());
            double totalDebt = Double.valueOf(txttotaldebt.getText());
            double returnMoney = paidAmount - totalDebt;
            returnMoney = Math.round(returnMoney);

            if(paidAmount >= totalDebt && paidAmount >0){
                String totalResult = "Check the details properly before proceeding!!"
                + "\n\nCustomer Name: "+ tempCustomer
                + "\nTelephone: " + tempTelephone
                + "\nItem: " + txtunpaiddebt.getText()
                + "\nTotal Amount: " + txttotaldebt.getText() +" $"
                + "\nPaid Amount: " + String.valueOf(paidAmount) +" $"
                + "\nReturn Money: " + String.valueOf(returnMoney) + " $";
                String[] options = { "Cancel", "Pay" };
                var selection = JOptionPane.showOptionDialog(null,totalResult,
                    "Payment Verification", 0, 3, null, options, options[0]);
                if(selection == 1){
                     LocalDateTime currentDateTime = LocalDateTime.now();
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

                    // Format the current timestamp
                    String dueDate = currentDateTime.format(formatter);
                    
                    try(Connection con = Connector.getConnection()){
                        PreparedStatement st = con.prepareStatement("UPDATE Pawn SET debt_amount = 0,loan_status = 'closed', paid_count = paid_count+1 WHERE pawn_id = ?");
                        st.setString(1, tempPawnid);
                        st.executeUpdate();
                        clearData();
                    }catch(SQLException e){
                        e.printStackTrace();
                    };
                    
                    JOptionPane.showMessageDialog(null, "Loan paid Successfully.");
                }
            }else{
                JOptionPane.showMessageDialog(null, "The paid amount is insufficient","Failure", JOptionPane.ERROR_MESSAGE);
            }

        }else{
            JOptionPane.showMessageDialog(null, "Fill in the Paid Amount textfield","Failure", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnpaid1ActionPerformed

    private void tblRedeemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRedeemMousePressed
        //         TODO add your handling code here:
        int selectedRowIndex = tblRedeem.getSelectedRow();

        // If no row is selected, selectedRowIndex will be -1
        if (selectedRowIndex != -1) {
            // Get the table model
               // Get the table model
            javax.swing.table.TableModel model = tblRedeem.getModel();

            // Retrieve the values safely with proper casting
            Object idObj = model.getValueAt(selectedRowIndex, 0);   // Assuming 1st column is ID
            Object nameObj = model.getValueAt(selectedRowIndex, 1); // Assuming 2nd column is Name
            Object itemObj = model.getValueAt(selectedRowIndex, 3); // Assuming 3rd column is Username
            Object telephoneObj = model.getValueAt(selectedRowIndex, 2); // Assuming 3rd column is Username
            Object tempstartObj = model.getValueAt(selectedRowIndex,4);
            Object tempdueObj = model.getValueAt(selectedRowIndex,5);

            // Convert ID to string if it's an Integer or handle accordingly
            String pawnId = idObj != null ? idObj.toString() : "";  // Handle possible Integer
            tempCustomer = nameObj instanceof String ? (String) nameObj : "";
            String item = itemObj instanceof String ? (String) itemObj : "";
            tempTelephone = telephoneObj instanceof String? (String) telephoneObj: "";
            tempstart = tempstartObj instanceof String? (String) tempstartObj:"";
            tempdue = tempdueObj instanceof String? (String) tempdueObj:"";

            // Set the values to the respective text fields and combo box
            String query = "SELECT *, interest_month+principal as totalamount FROM Pawn, Loan where Pawn.pawn_id = Loan.pawn_id and Pawn.pawn_id = ?";
            try (PreparedStatement stmt = conn.prepareStatement(query)) {
                stmt.setString(1, pawnId);

                ResultSet rs = stmt.executeQuery();

                while (rs.next()) {
                    String id = rs.getString("pawn_id");
                    String loanAmount = String.valueOf(rs.getDouble("loan_amount"));
                    String interest = String.valueOf(rs.getDouble("interest_rate"));
                    String debtAmount = String.valueOf(rs.getDouble("debt_amount"));
                    String duration = rs.getString("duration");
                    String loanPermonth = String.valueOf(rs.getDouble("totalamount"));
                    
                    startDate = rs.getString("start_date");
                    tempItem = item;
                    
                    double calculated = (Double.valueOf(loanAmount) * Double.valueOf(interest));
                    double totalAmount = Double.valueOf(debtAmount)+calculated;
                    tempPawnid = id;
                    txtloan.setText(loanAmount);
                    txtinterest.setText(interest);
                    txttotaldebt.setText(String.valueOf(totalAmount));
                    txtitem.setText(item);
                    txtunpaiddebt.setText(debtAmount);
                 

                }
            } catch (SQLException e) {
                e.printStackTrace();
            }

            // Print the selected row data for debugging (optional)

        } else {
            System.out.println("No row selected.");
        }
    }//GEN-LAST:event_tblRedeemMousePressed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        clearData();
    }//GEN-LAST:event_btnclearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Redeem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Redeem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Redeem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Redeem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        UIManager.setLookAndFeel(new FlatIntelliJLaf());
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Redeem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnpaid1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    public javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRedeem;
    private javax.swing.JTextField txtinterest;
    private javax.swing.JTextField txtitem;
    private javax.swing.JTextField txtloan;
    private javax.swing.JTextField txtpaid;
    private javax.swing.JTextField txtpawn;
    private javax.swing.JTextField txttotaldebt;
    private javax.swing.JTextField txtunpaiddebt;
    // End of variables declaration//GEN-END:variables
}
